{"version":3,"sources":["api/users.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","TodoInfo","todo","user","className","completed","title","href","TodoList","todos","map","getUser","userId","usersFromServer","find","combinedTodos","App","useState","selectedUser","setSelectedUser","userError","setUserError","todoTitle","setTodoTitle","titleError","setTitleError","setTodos","titleLanguageError","setTitleLanguageError","action","method","onSubmit","event","preventDefault","todoToAdd","reduce","acc","curr","Math","max","prevState","type","placeholder","value","onChange","test","currentTarget","replace","htmlFor","target","disabled","selected","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f2f4d3c.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import Todo from '../../types/Todo';\nimport User from '../../types/User';\n\ntype Props = {\n  todo: Todo,\n  user: User | null,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo, user }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={`TodoInfo${todo.completed ? ' TodoInfo--completed' : ''}`}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {user && (\n        <a className=\"UserInfo has-text-grey\" href={`mailto:${user.email}`}>\n          {user.name}\n        </a>\n      )}\n    </article>\n  );\n};\n","import Todo from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n          user={todo.user}\n        />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { FormEvent, useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\nimport User from './types/User';\nimport Todo from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst combinedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [selectedUser, setSelectedUser] = useState('-1');\n  const [userError, setUserError] = useState(false);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [todos, setTodos] = useState(combinedTodos);\n  const [titleLanguageError, setTitleLanguageError] = useState(false);\n\n  const hadleTitle = (event: FormEvent<HTMLInputElement>) => {\n    setTitleLanguageError(/[А-яа-я]/g.test(event.currentTarget.value));\n\n    setTodoTitle(event.currentTarget.value\n      .replace(/[^A-Za-z]/g, ''));\n\n    if (event.currentTarget.value) {\n      setTitleError(false);\n    }\n  };\n\n  const validation = () => {\n    if (selectedUser !== '-1' && todoTitle !== '') {\n      return true;\n    }\n\n    if (selectedUser === '-1') {\n      setUserError(true);\n    }\n\n    if (todoTitle === '') {\n      setTitleError(true);\n    }\n\n    return false;\n  };\n\n  const submitHandler = (event: FormEvent) => {\n    event.preventDefault();\n    if (!validation()) {\n      return;\n    }\n\n    const todoId = todos.reduce((acc, curr) => Math.max(acc, curr.id), -1) + 1;\n\n    const todoToAdd = {\n      id: todoId,\n      title: todoTitle,\n      userId: +selectedUser,\n      completed: false,\n      user: getUser(+selectedUser),\n    };\n\n    setSelectedUser('-1');\n    setTodoTitle('');\n    setTitleError(false);\n    setTitleLanguageError(false);\n\n    setTodos(prevState => [\n      ...prevState,\n      todoToAdd,\n    ]);\n  };\n\n  return (\n    <div className=\"App panel\">\n      <h1\n        className=\"heading is-size-3\"\n      >\n        Add todo form\n      </h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={submitHandler}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            className=\"input\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={todoTitle}\n            onChange={hadleTitle}\n          />\n          {titleError && <span className=\"error\">Please enter a title</span>}\n          <br />\n          {titleLanguageError\n            && <span className=\"error\">Only english characters</span>}\n        </div>\n        <label\n          className=\"label\"\n          htmlFor=\"select\"\n        >\n          User:\n        </label>\n        <div className=\"select is-rounded\">\n          <select\n            id=\"select\"\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={event => {\n              setSelectedUser(event.target.value);\n              setUserError(false);\n            }}\n          >\n            <option value=\"-1\" disabled selected>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {userError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          className=\"button\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todos}\n      />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}