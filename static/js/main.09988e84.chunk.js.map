{"version":3,"sources":["api/users.ts","api/todos.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","TodoInfo","todo","currentUser","users","find","user","className","href","TodoList","todos","map","App","useState","selectedUser","setSelectedUser","userError","setUserError","todoTitle","setTitle","titleError","setTitleError","todosFromServer","setTodos","titleLanguageError","setTitleLanguageError","action","method","onSubmit","event","preventDefault","todoToAdd","reduce","acc","curr","Math","max","prevState","type","placeholder","value","onChange","target","match","replace","htmlFor","disabled","selected","usersFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09988e84.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import Todo from '../../types/Todo';\nimport users from '../../api/users';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const currentUser = users.find(user => user.id === todo.userId);\n\n  return (\n    <article\n      data-id={todo.id}\n      className={`TodoInfo${todo.completed ? ' TodoInfo--completed' : ''}`}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <a className=\"UserInfo has-text-grey\" href={`mailto:${currentUser?.email}`}>\n        {currentUser?.name}\n      </a>\n    </article>\n  );\n};\n","import Todo from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { FormEvent, useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\n\nexport const App = () => {\n  const [selectedUser, setSelectedUser] = useState('-1');\n  const [userError, setUserError] = useState(false);\n  const [todoTitle, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [todos, setTodos] = useState(todosFromServer);\n  const [titleLanguageError, setTitleLanguageError] = useState(false);\n  const validation = () => {\n    if (selectedUser !== '-1' && todoTitle !== '') {\n      return true;\n    }\n\n    if (selectedUser === '-1') {\n      setUserError(true);\n    }\n\n    if (todoTitle === '') {\n      setTitleError(true);\n    }\n\n    return false;\n  };\n\n  const submitHandler = (event: FormEvent) => {\n    event.preventDefault();\n    if (!validation()) {\n      return;\n    }\n\n    const todoId = todos.reduce((acc, curr) => Math.max(acc, curr.id), -1) + 1;\n\n    const todoToAdd = {\n      id: todoId,\n      title: todoTitle,\n      userId: +selectedUser,\n      completed: false,\n    };\n\n    setSelectedUser('-1');\n    setTitle('');\n\n    setTodos(prevState => [\n      ...prevState,\n      todoToAdd,\n    ]);\n  };\n\n  return (\n    <div className=\"App panel\">\n      <h1\n        className=\"heading is-size-3\"\n      >\n        Add todo form\n      </h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={submitHandler}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            className=\"input\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={todoTitle}\n            onChange={event => {\n              setTitleError(false);\n              if (event.target.value.match(/[А-яа-я]/g)) {\n                setTitleLanguageError(true);\n              } else {\n                setTitleLanguageError(false);\n              }\n\n              setTitle(event.target.value\n                .replace(/[^A-Za-z]/g, ''));\n            }}\n          />\n          {titleError && <span className=\"error\">Please enter a title</span>}\n          <br />\n          {titleLanguageError\n            && <span className=\"error\">Only english characters</span>}\n        </div>\n        <label\n          className=\"label\"\n          htmlFor=\"select\"\n        >\n          User:\n        </label>\n        <div className=\"select is-rounded\">\n          <select\n            id=\"select\"\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={event => {\n              setSelectedUser(event.target.value);\n              setUserError(false);\n            }}\n          >\n            <option value=\"-1\" disabled selected>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {userError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          className=\"button\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}